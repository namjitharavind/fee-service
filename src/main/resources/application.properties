spring.application.name=fee-service
server.port=9081
server.servlet.context-path=/fee-service

spring.datasource.url=jdbc:h2:mem:feeDb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.h2.console.enabled=true
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always


#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.hibernate.show-sql=true
#spring.jpa.show-sql = true

management.endpoints.web.exposure.include=*
management.endpoints.health.show-details=always


#Student Service API properties
rest.api.student.service.name = student-service
rest.api.student.service.base-url = http://localhost:9080/student-service
rest.api.student.service.student-by-id-api = /student/{id}
rest.api.student.service.students-by-grade-api = /student/grade/{grade}

#Student Service Retry properties
resilience4j.retry.instances.student-service.max-attempts=3
resilience4j.retry.instances.student-service.wait-duration=1s
resilience4j.retry.instances.student-service.retry-exceptions=org.springframework.web.client.HttpServerErrorException
resilience4j.retry.instances.student-service.ignore-exceptions=org.springframework.web.client.ResourceAccessException

#Student Service Circuit Breaker properties
resilience4j.circuitbreaker.backends.student-service.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.backends.student-service.sliding-window-size=6
resilience4j.circuitbreaker.backends.student-service.minimum-number-of-calls=4
resilience4j.circuitbreaker.backends.student-service.wait-duration-in-open-state=20s
resilience4j.circuitbreaker.backends.student-service.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.backends.student-service.failure-rate-threshold=50

#Aspect order Higher value have higher priority. Here Retry will happen first after that only circuit breaker will happen
resilience4j.retry.retryAspectOrder=2
resilience4j.circuitbreaker.circuitBreakerAspectOrder=1

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
management.tracing.sampling.probability=1.0
management.metrics.distribution.percentiles-histogram.http.server.requests=true




